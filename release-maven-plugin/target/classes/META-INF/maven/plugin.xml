<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.2 on 2017-12-12 -->

<plugin>
  <name>Multi Module Maven Release Plugin :: Plugin</name>
  <description>Maven plugin to release multi-module Maven projects where only changed modules should be released</description>
  <groupId>ch.sourcepond.maven.plugins.multimodule</groupId>
  <artifactId>release-maven-plugin</artifactId>
  <version>1.0-SNAPSHOT</version>
  <goalPrefix>release</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>next</goal>
      <description>Logs the versions of the modules that the releaser will release on the next
release. Does not run the build nor tag the repo.</description>
      <requiresDirectInvocation>true</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>true</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>ch.sourcepond.maven.release.NextMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>1.0.0</since>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>buildNumber</name>
          <type>java.lang.Long</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
The build number to use in the release version. Given a snapshot version
of &quot;1.0-SNAPSHOT&quot; and a buildNumber value of &quot;2&quot;, the actual released
version will be &quot;1.0.2&quot;.
&lt;/p&gt;
&lt;p&gt;
By default, the plugin will automatically find a suitable build number.
It will start at version 0 and increment this with each release.
&lt;/p&gt;
&lt;p&gt;
This can be specified using a command line parameter (&quot;-DbuildNumber=2&quot;)
or in this plugin&apos;s configuration.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>debugEnabled</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies whether the release build should run with the &quot;-X&quot; switch.</description>
        </parameter>
        <parameter>
          <name>disableSshAgent</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>knownHosts</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>If set, this file will be used to specify the known_hosts. This will
override any default value.</description>
        </parameter>
        <parameter>
          <name>modulesToForceRelease</name>
          <alias>forceRelease</alias>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>A module to force release on, even if no changes has been detected.</description>
        </parameter>
        <parameter>
          <name>modulesToRelease</name>
          <alias>modulesToRelease</alias>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>The modules to release, or no value to to release the project from the
root pom, which is the default. The selected module plus any other
modules it needs will be built and released also. When run from the
command line, this can be a comma-separated list of module names.</description>
        </parameter>
        <parameter>
          <name>passphrase</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the passphrase to be used with the identityFile specified.</description>
        </parameter>
        <parameter>
          <name>privateKey</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the private key to be used.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Project.</description>
        </parameter>
        <parameter>
          <name>projects</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>remoteRepositoryEnabled</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies whether the plugin should also work with the remote repository.
If {@code true}, the remote repository will be taken into account during
the release process. This property has only an effect, when a distributed
SCM like GIT is used. On client/server SCMs like Subversion, this
property is ignored. Default value is {@code true}.</description>
        </parameter>
        <parameter>
          <name>serverId</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>If set, the identityFile and passphrase will be read from the Maven
settings file.</description>
        </parameter>
        <parameter>
          <name>settings</name>
          <type>org.apache.maven.settings.Settings</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <buildNumber implementation="java.lang.Long">${buildNumber}</buildNumber>
        <debugEnabled implementation="boolean">${debugEnabled}</debugEnabled>
        <disableSshAgent implementation="boolean">${disableSshAgent}</disableSshAgent>
        <knownHosts implementation="java.lang.String">${knownHosts}</knownHosts>
        <modulesToForceRelease implementation="java.util.List">${modulesToForceRelease}</modulesToForceRelease>
        <modulesToRelease implementation="java.util.List">${modulesToRelease}</modulesToRelease>
        <passphrase implementation="java.lang.String">${passphrase}</passphrase>
        <privateKey implementation="java.lang.String">${privateKey}</privateKey>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}">${project}</project>
        <projects implementation="java.util.List" default-value="${reactorProjects}">${projects}</projects>
        <remoteRepositoryEnabled implementation="boolean" default-value="true">${remoteRepositoryEnabled}</remoteRepositoryEnabled>
        <serverId implementation="java.lang.String">${serverId}</serverId>
        <settings implementation="org.apache.maven.settings.Settings" default-value="${settings}"/>
      </configuration>
    </mojo>
    <mojo>
      <goal>release</goal>
      <description>Releases the project.</description>
      <requiresDirectInvocation>true</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>true</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>ch.sourcepond.maven.release.ReleaseMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>1.0.0</since>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>buildNumber</name>
          <type>java.lang.Long</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
The build number to use in the release version. Given a snapshot version
of &quot;1.0-SNAPSHOT&quot; and a buildNumber value of &quot;2&quot;, the actual released
version will be &quot;1.0.2&quot;.
&lt;/p&gt;
&lt;p&gt;
By default, the plugin will automatically find a suitable build number.
It will start at version 0 and increment this with each release.
&lt;/p&gt;
&lt;p&gt;
This can be specified using a command line parameter (&quot;-DbuildNumber=2&quot;)
or in this plugin&apos;s configuration.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>debugEnabled</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies whether the release build should run with the &quot;-X&quot; switch.</description>
        </parameter>
        <parameter>
          <name>disableSshAgent</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>globalSettings</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies a custom, global Maven settings file to be used during the
release build.</description>
        </parameter>
        <parameter>
          <name>goals</name>
          <alias>releaseGoals</alias>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
The goals to run against the project during a release. By default this is
&quot;deploy&quot; which means the release version of your artifact will be tested
and deployed.
&lt;/p&gt;
&lt;p&gt;
You can specify more goals and maven options. For example if you want to
perform a clean, build a maven site, and then deploys it, use:
&lt;/p&gt;

&lt;pre&gt;
{@code
&lt;releaseGoals&gt;
    &lt;releaseGoal&gt;clean&lt;/releaseGoal&gt;
    &lt;releaseGoal&gt;site&lt;/releaseGoal&gt;
    &lt;releaseGoal&gt;deploy&lt;/releaseGoal&gt;
&lt;/releaseGoals&gt;
}
&lt;/pre&gt;</description>
        </parameter>
        <parameter>
          <name>incrementSnapshotVersionAfterRelease</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>knownHosts</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>If set, this file will be used to specify the known_hosts. This will
override any default value.</description>
        </parameter>
        <parameter>
          <name>localMavenRepo</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies a custom directory which should be used as local Maven
repository.</description>
        </parameter>
        <parameter>
          <name>modulesToForceRelease</name>
          <alias>forceRelease</alias>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>A module to force release on, even if no changes has been detected.</description>
        </parameter>
        <parameter>
          <name>modulesToRelease</name>
          <alias>modulesToRelease</alias>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>The modules to release, or no value to to release the project from the
root pom, which is the default. The selected module plus any other
modules it needs will be built and released also. When run from the
command line, this can be a comma-separated list of module names.</description>
        </parameter>
        <parameter>
          <name>passphrase</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the passphrase to be used with the identityFile specified.</description>
        </parameter>
        <parameter>
          <name>privateKey</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the private key to be used.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Project.</description>
        </parameter>
        <parameter>
          <name>projects</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>releaseProfiles</name>
          <alias>releaseProfiles</alias>
          <type>java.util.List</type>
          <since>1.0.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Profiles to activate during the release.
&lt;/p&gt;
&lt;p&gt;
Note that if any profiles are activated during the build using the `-P`
or `--activate-profiles` will also be activated during release. This
gives two options for running releases: either configure it in the plugin
configuration, or activate profiles from the command line.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>remotePushEnabled</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies whether the plugin should push changes to the remote
repository. This property has only an effect, when a distributed SCM like
GIT is used. If {@code remoteRepositoryEnabled} is disabled and a
distributed SCM like GIT is used, this property has no effect.</description>
        </parameter>
        <parameter>
          <name>remoteRepositoryEnabled</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies whether the plugin should also work with the remote repository.
If {@code true}, the remote repository will be taken into account during
the release process. This property has only an effect, when a distributed
SCM like GIT is used. On client/server SCMs like Subversion, this
property is ignored. Default value is {@code true}.</description>
        </parameter>
        <parameter>
          <name>serverId</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>If set, the identityFile and passphrase will be read from the Maven
settings file.</description>
        </parameter>
        <parameter>
          <name>settings</name>
          <type>org.apache.maven.settings.Settings</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>skipTests</name>
          <alias>skipTests</alias>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If true then tests will not be run during a release. This is the same as
adding -DskipTests=true to the release goals.</description>
        </parameter>
        <parameter>
          <name>userSettings</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies a custom, user specific Maven settings file to be used during
the release build.</description>
        </parameter>
      </parameters>
      <configuration>
        <buildNumber implementation="java.lang.Long">${buildNumber}</buildNumber>
        <debugEnabled implementation="boolean">${debugEnabled}</debugEnabled>
        <disableSshAgent implementation="boolean">${disableSshAgent}</disableSshAgent>
        <globalSettings implementation="java.io.File">${globalSettings}</globalSettings>
        <incrementSnapshotVersionAfterRelease implementation="boolean">${incrementSnapshotVersionAfterRelease}</incrementSnapshotVersionAfterRelease>
        <knownHosts implementation="java.lang.String">${knownHosts}</knownHosts>
        <localMavenRepo implementation="java.io.File">${localMavenRepo}</localMavenRepo>
        <modulesToForceRelease implementation="java.util.List">${modulesToForceRelease}</modulesToForceRelease>
        <modulesToRelease implementation="java.util.List">${modulesToRelease}</modulesToRelease>
        <passphrase implementation="java.lang.String">${passphrase}</passphrase>
        <privateKey implementation="java.lang.String">${privateKey}</privateKey>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}">${project}</project>
        <projects implementation="java.util.List" default-value="${reactorProjects}">${projects}</projects>
        <remotePushEnabled implementation="boolean" default-value="true">${remotePushEnabled}</remotePushEnabled>
        <remoteRepositoryEnabled implementation="boolean" default-value="true">${remoteRepositoryEnabled}</remoteRepositoryEnabled>
        <serverId implementation="java.lang.String">${serverId}</serverId>
        <settings implementation="org.apache.maven.settings.Settings" default-value="${settings}"/>
        <skipTests implementation="boolean" default-value="false">${skipTests}</skipTests>
        <userSettings implementation="java.io.File">${userSettings}</userSettings>
      </configuration>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>ch.sourcepond.maven.plugins.multimodule</groupId>
      <artifactId>release-maven-plugin-commons</artifactId>
      <type>jar</type>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>ch.sourcepond.maven.plugins.multimodule</groupId>
      <artifactId>release-maven-plugin-scm-api</artifactId>
      <type>jar</type>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jgit</groupId>
      <artifactId>org.eclipse.jgit</artifactId>
      <type>jar</type>
      <version>4.5.0.201609210915-r</version>
    </dependency>
    <dependency>
      <groupId>com.googlecode.javaewah</groupId>
      <artifactId>JavaEWAH</artifactId>
      <type>jar</type>
      <version>0.7.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <type>jar</type>
      <version>4.3.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <type>jar</type>
      <version>4.3.3</version>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <type>jar</type>
      <version>1.1.3</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <type>jar</type>
      <version>1.6</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <type>jar</type>
      <version>1.7.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>3.3.3</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.plexus</artifactId>
      <type>jar</type>
      <version>0.3.0</version>
    </dependency>
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>jsr250-api</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.inject</artifactId>
      <type>jar</type>
      <version>0.3.0</version>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <type>jar</type>
      <version>1</version>
    </dependency>
    <dependency>
      <groupId>aopalliance</groupId>
      <artifactId>aopalliance</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <type>jar</type>
      <version>19.0</version>
    </dependency>
    <dependency>
      <groupId>com.ximpleware</groupId>
      <artifactId>vtd-xml</artifactId>
      <type>jar</type>
      <version>2.13</version>
    </dependency>
    <dependency>
      <groupId>com.jcraft</groupId>
      <artifactId>jsch</artifactId>
      <type>jar</type>
      <version>0.1.54</version>
    </dependency>
    <dependency>
      <groupId>com.jcraft</groupId>
      <artifactId>jsch.agentproxy.sshagent</artifactId>
      <type>jar</type>
      <version>0.0.9</version>
    </dependency>
    <dependency>
      <groupId>com.jcraft</groupId>
      <artifactId>jsch.agentproxy.core</artifactId>
      <type>jar</type>
      <version>0.0.9</version>
    </dependency>
    <dependency>
      <groupId>com.jcraft</groupId>
      <artifactId>jsch.agentproxy.jsch</artifactId>
      <type>jar</type>
      <version>0.0.9</version>
    </dependency>
    <dependency>
      <groupId>com.jcraft</groupId>
      <artifactId>jsch.agentproxy.usocket-nc</artifactId>
      <type>jar</type>
      <version>0.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugin-tools</groupId>
      <artifactId>maven-plugin-annotations</artifactId>
      <type>jar</type>
      <version>3.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>3.3.3</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>3.0.20</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <type>jar</type>
      <version>3.3.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings-builder</artifactId>
      <type>jar</type>
      <version>3.3.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>3.3.3</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-guice</artifactId>
      <type>jar</type>
      <version>3.2.5</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-interpolation</artifactId>
      <type>jar</type>
      <version>1.21</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-classworlds</artifactId>
      <type>jar</type>
      <version>2.5.2</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
      <type>jar</type>
      <version>1.5.5</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-sec-dispatcher</artifactId>
      <type>jar</type>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-cipher</artifactId>
      <type>jar</type>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <type>jar</type>
      <version>3.3.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-invoker</artifactId>
      <type>jar</type>
      <version>2.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <type>jar</type>
      <version>3.5</version>
    </dependency>
    <dependency>
      <groupId>com.googlecode.json-simple</groupId>
      <artifactId>json-simple</artifactId>
      <type>jar</type>
      <version>1.1.1</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <type>jar</type>
      <version>1.7.21</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-builder-support</artifactId>
      <type>jar</type>
      <version>3.3.3</version>
    </dependency>
  </dependencies>
</plugin>